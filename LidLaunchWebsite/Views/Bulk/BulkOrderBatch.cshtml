@model LidLaunchWebsite.Models.BulkBatchOrder
@{
    ViewBag.Title = "BulkOrderBatch";
}

<h2>BATCH ID: @Model.batchInfo.BatchId</h2>
<div>
    <a href="~/Bulk/PrintBulkOrderBatchBulkOrders?bulkBatchId=@Model.batchInfo.BatchId" target="_blank"><input type="button" value="PRINT ALL BATCHED ORDERS" class="smallButton  left" /></a>

    <a href="~/Bulk/BulkOrderBatch?bulkBatchId=@Model.batchInfo.BatchId&onlyOutOfStock=true"><input type="button" value="SHOW ONLY OUT OF STOCK" class="smallButton left" style="margin-left:20px;"  /></a>

    <a href="~/Bulk/BulkOrderBatch?bulkBatchId=@Model.batchInfo.BatchId&onlyOutOfStock=false"><input type="button" value="SHOW ALL" class="smallButton left" style="margin-left:20px;" /></a>
</div>
<div class="clear"></div>
<table>
    @foreach (LidLaunchWebsite.Models.BulkOrderItem itemToOrder in Model.lstItemsToOrder)
    {    
        <tr>
            <td><span onclick="$(this).closest('tr').toggleClass('ordered')" class="smallButton" style="cursor:pointer;"><i class="fas fa-check"></i></span></td>
            <td style="padding:10px;">
                <img src='~/Images/@itemToOrder.ItemThumbnail' />
            </td>
            <td style="padding:10px;">
                @itemToOrder.ItemName
            </td>
            <td style="padding:10px;">
                @itemToOrder.ItemQuantity
            </td>
            <td>
                @{var isMissing = false;}
                @if (Model.lstMissingItems.Where(lm => lm.MasterBulkOrderItemId == itemToOrder.MasterItemId).ToList().Count > 0)
                {
                    if (itemToOrder.ItemName.Contains("OSFA"))
                    {
                        if (Model.lstMissingItems.Where(lm => lm.MasterBulkOrderItemId == itemToOrder.MasterItemId && lm.ItemName.Contains("OSFA")).ToList().Count > 0)
                        {
                            isMissing = true;
                        }
                    }
                    if (itemToOrder.ItemName.Contains("L/XL"))
                    {
                        if (Model.lstMissingItems.Where(lm => lm.MasterBulkOrderItemId == itemToOrder.MasterItemId && lm.ItemName.Contains("L/XL")).ToList().Count > 0)
                        {
                            isMissing = true;
                        }
                    }
                    if (itemToOrder.ItemName.Contains("S/M"))
                    {
                        if (Model.lstMissingItems.Where(lm => lm.MasterBulkOrderItemId == itemToOrder.MasterItemId && lm.ItemName.Contains("S/M")).ToList().Count > 0)
                        {
                            isMissing = true;
                        }
                    }
                    if (isMissing)
                    {
                        <div class="missingItemSection" style="background: red; padding: 30px;">
                            <span class="missingItemId hidden">@Model.lstMissingItems.First(lm => lm.MasterBulkOrderItemId == itemToOrder.MasterItemId).Id</span>
                            <span class="decrementButton"><input type="button" class="smallButton" value="-" onclick="decrementMissingTotal(this, @itemToOrder.MasterItemId)" /></span>
                            <span class="missingTotalHolder"><input type="text" class="txtMissingTotal" value="@Model.lstMissingItems.First(lm => lm.MasterBulkOrderItemId == itemToOrder.MasterItemId).MissingQuantity" /></span>
                            <span class="incrementButton"><input type="button" class="smallButton" value="+" onclick="incrementMissingTotal(this, @itemToOrder.MasterItemId)" /></span>
                        </div>
                    }
                }
                else
                {
                    <input type="button" class="smallButton btnCreateMissingBlank" value="Out Of Stock" onclick="createBulkOrderBatchMissingItem(this, '@itemToOrder.ItemName', @itemToOrder.MasterItemId, @Model.batchInfo.BatchId)" />
                    <div class="missingItemSection hidden">
                        <span class="missingItemId hidden"></span>
                        <span class="decrementButton"><input type="button" class="smallButton" value="-" onclick="decrementMissingTotal(this, @itemToOrder.MasterItemId)" /></span>
                        <span class="missingTotalHolder"><input type="text" class="txtMissingTotal" /></span>
                        <span class="incrementButton"><input type="button" class="smallButton" value="+" onclick="incrementMissingTotal(this, @itemToOrder.MasterItemId)" /></span>
                    </div>
                }
            </td>
            <td style="padding:10px;">
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            </td>
        </tr>
        <tr>
            <td colspan="4" style="border-bottom:2px solid;"></td>
        </tr>

        }
    </table>

@foreach (LidLaunchWebsite.Models.BulkOrder bulkOrder in Model.lstBulkOrders)
{
    <div><a href="~/Dashboard/BulkOrderDetailsPopup?bulkOrderId=@bulkOrder.Id" target="_blank">@bulkOrder.Id</a></div>
}

<script type="text/javascript">
    $(document).ready(function () {
        $('.txtMissingTotal').blur(function () {
            updateMissingTotal(this);
        });
    });
    function createBulkOrderBatchMissingItem(that, itemName, masterItemId, batchId) {
        $(that).hide();
        showLoading();
        $.ajax({
            type: "POST",
            url: '/Dashboard/CreateBulkOrderBatchMissingItem',
            contentType: false,
            processData: false,
            data: JSON.stringify({
                itemName: itemName, masterItemId: masterItemId, batchId: batchId
            }),
            contentType: "application/json",
            success: function (result) {
                if (result == "0") {
                    //do nothing
                    displayPopupNotification('error.', 'error', false);
                } else {
                    hideLoading();
                    displayPopupNotification('MISSING ITEM RECORD CREATED', 'error', false);
                    $(that).closest('tr').find('.missingItemSection').show();
                    $(that).closest('tr').find('.missingItemId').text(result);
                }
            },
            error: function (xhr, status, p3, p4) {
                displayPopupNotification('Error.', 'error', false);
            }
        });
        
    }
    function decrementMissingTotal(that) {
        var currentTotal = $(that).closest('tr').find('.txtMissingTotal').val();
        var missingItemId = $(that).closest('tr').find('.missingItemId').text();
        if (currentTotal == '0' || currentTotal == '') {
            //do nothing
        } else {
            currentTotal--;

            showLoading();
            $.ajax({
                type: "POST",
                url: '/Dashboard/UpdateBulkOrderBatchMissingItemsQuantity',
                contentType: false,
                processData: false,
                data: JSON.stringify({
                    id: missingItemId, missingQuantity: currentTotal
                }),
                contentType: "application/json",
                success: function (result) {
                    if (result == "") {
                        //do nothing
                        displayPopupNotification('error.', 'error', false);
                    } else {
                        hideLoading();
                        $(that).closest('tr').find('.txtMissingTotal').val(currentTotal);
                    }
                },
                error: function (xhr, status, p3, p4) {
                    displayPopupNotification('Error.', 'error', false);
                }
            });
        }
    }
    function incrementMissingTotal(that, masterItemId) {
        var currentTotal = $(that).closest('tr').find('.txtMissingTotal').val();
        var missingItemId = $(that).closest('tr').find('.missingItemId').text();
        currentTotal++;

        showLoading();
        $.ajax({
            type: "POST",
            url: '/Dashboard/UpdateBulkOrderBatchMissingItemsQuantity',
            contentType: false,
            processData: false,
            data: JSON.stringify({
                id: missingItemId, missingQuantity: currentTotal
            }),
            contentType: "application/json",
            success: function (result) {
                if (result == "") {
                    //do nothing
                    displayPopupNotification('error.', 'error', false);
                } else {
                    hideLoading();
                    $(that).closest('tr').find('.txtMissingTotal').val(currentTotal);
                }
            },
            error: function (xhr, status, p3, p4) {
                displayPopupNotification('Error.', 'error', false);
            }
        });
        
    }    
    function updateMissingTotal(that) {
        var currentTotal = $(that).closest('tr').find('.txtMissingTotal').val();
        var missingItemId = $(that).closest('tr').find('.missingItemId').text();

        showLoading();
        $.ajax({
            type: "POST",
            url: '/Dashboard/UpdateBulkOrderBatchMissingItemsQuantity',
            contentType: false,
            processData: false,
            data: JSON.stringify({
                id: missingItemId, missingQuantity: currentTotal
            }),
            contentType: "application/json",
            success: function (result) {
                if (result == "") {
                    //do nothing
                    displayPopupNotification('error.', 'error', false);
                } else {
                    hideLoading();
                    $(that).closest('tr').find('.txtMissingTotal').val(currentTotal);
                }
            },
            error: function (xhr, status, p3, p4) {
                displayPopupNotification('Error.', 'error', false);
            }
        });
    }
</script>
<style type="text/css">
    .decrementButton {
        display: inline-block;
    }
    .missingTotalHolder {
        display: inline-block;
    }
    .missingTotalHolder input {
        width:80px;
    }
    .incrementButton {
        display: inline-block;
    }
    .ordered {
        background-color: #a2e392;
    }
</style>